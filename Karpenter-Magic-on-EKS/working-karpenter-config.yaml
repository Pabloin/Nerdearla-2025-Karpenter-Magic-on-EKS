apiVersion: karpenter.k8s.aws/v1
kind: EC2NodeClass
metadata:
  name: default
spec:
  # AMI Family - Amazon Linux 2023 
  amiFamily: AL2023
  
  # Use the latest EKS optimized AMI
  amiSelectorTerms:
    - tags:
        karpenter.sh/discovery: pablo-karpenter-demo
        
  # Subnet selection - Karpenter will discover subnets tagged for the cluster  
  subnetSelectorTerms:
    - tags:
        karpenter.sh/discovery: pablo-karpenter-demo
        
  # Security Group selection
  securityGroupSelectorTerms:
    - tags:
        karpenter.sh/discovery: pablo-karpenter-demo
        
  # Instance profile for nodes 
  role: "KarpenterNodeInstanceRole"
  
  # User Data to join the EKS cluster
  userData: |
    #!/bin/bash
    /etc/eks/bootstrap.sh pablo-karpenter-demo
---
apiVersion: karpenter.sh/v1
kind: NodePool  
metadata:
  name: general-compute
spec:
  # Template for nodes
  template:
    spec:
      # Reference to EC2NodeClass
      nodeClassRef:
        group: karpenter.k8s.aws
        kind: EC2NodeClass
        name: default
        
      # Requirements for instances
      requirements:
        - key: kubernetes.io/arch
          operator: In
          values: ["amd64"]
        - key: kubernetes.io/os  
          operator: In
          values: ["linux"]
        - key: karpenter.sh/capacity-type
          operator: In  
          values: ["on-demand"]  # Start with on-demand for reliability
        - key: karpenter.k8s.aws/instance-category
          operator: In
          values: ["c", "m", "r"]  # Compute, Memory, General purpose
        - key: karpenter.k8s.aws/instance-generation
          operator: Gt
          values: ["2"]  # Only newer generation instances
          
      # Node properties  
      expireAfter: 24h  # Expire after 24 hours for demo
          
  # Resource limits
  limits:
    cpu: 100    # Max 100 vCPU for demo
    
  # Disruption settings
  disruption:
    consolidationPolicy: WhenEmpty
    consolidateAfter: 30s  # Quick consolidation for demo
